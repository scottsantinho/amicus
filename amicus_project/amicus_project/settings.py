"""
Django settings for amicus_project project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Define the base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# Define the secret key for the Django project (Note: This should be kept secret in production)
SECRET_KEY = 'django-insecure-ne%cluk@&gql5@_g-gh_5+#9850r*d)e!*gk)$7$%ih(qktrwp' #THIS KEY DOESN'T MATTER SINCE IT'S AN OPEN SOURCE PROJECT

# Set debug mode to True (should be set to False in production)
DEBUG = True

# Define allowed hosts (empty list means only localhost is allowed)
ALLOWED_HOSTS = []


# Application definition

# List of installed applications, including both Django built-ins and custom apps
INSTALLED_APPS = [
    #Personal Apps
    'widget_tweaks',
    'nucleus', # Core functionality
    'colloquium', # Conversation handling
    #Django Apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# List of middleware classes used by the project
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Define the root URL configuration
ROOT_URLCONF = 'amicus_project.urls'

# Configure the template engine
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # This should point to the root templates folder
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Define the WSGI application
WSGI_APPLICATION = 'amicus_project.wsgi.application'


# Database configuration
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'amicus_db',
        'USER': 'magnus',
        'PASSWORD': 'imperium',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation settings
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization settings
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Set the language code
LANGUAGE_CODE = 'en-us'

# Set the time zone
TIME_ZONE = 'UTC'

# Enable internationalization
USE_I18N = True

# Enable timezone-aware datetimes
USE_TZ = True


# Static files (CSS, JavaScript, Images) configuration
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Define the URL prefix for static files
STATIC_URL = '/static/'
# Define additional directories where Django should look for static files
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
# Define the directory where Django will collect all static files
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Set the default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Set the custom user model
AUTH_USER_MODEL = 'nucleus.CustomUser'

# Print debug information about static file directories
print(f"BASE_DIR: {BASE_DIR}")
print(f"STATICFILES_DIRS: {STATICFILES_DIRS}")

# Define authentication backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# Set the URL to redirect to after successful login
LOGIN_REDIRECT_URL = 'home'
# Set the URL to redirect to after logout
LOGOUT_REDIRECT_URL = 'home'

# Set the Replicate API token (Note: This should be stored as an environment variable in production)
REPLICATE_API_TOKEN = 'r8_MwQGs74BmerRzTDHICLGlqj2Aul9S9E2Y0kVg'